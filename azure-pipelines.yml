# azure-pipelines.yml
trigger: none  # No automatic triggers; run manually

parameters:
  - name: resource_group_name
    type: string
    default: "aks_tf_rg1"
    displayName: "Resource Group Name"

  - name: location
    type: string
    default: "EastUS"
    displayName: "Location"
    values:
    - "EastUS"
    - "WestUS"
    - "CentralUS"

  - name: cluster_name
    type: string
    default: "my-aks-cluster-new"
    displayName: "Cluster Name"

  - name: kubernetes_version
    type: string
    default: "1.27.7"
    displayName: "Kubernetes Version"

  - name: system_node_count
    type: number
    default: 2
    displayName: "System Node Count"

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.3.0'  # specify the Terraform version you are using

steps:
- script: |
    echo "resource_group_name = \"${{ parameters.resource_group_name }}\"" > terraform.tfvars
    echo "location = \"${{ parameters.location }}\"" >> terraform.tfvars
    echo "cluster_name = \"${{ parameters.cluster_name }}\"" >> terraform.tfvars
    echo "kubernetes_version = \"${{ parameters.kubernetes_version }}\"" >> terraform.tfvars
    echo "system_node_count = ${parameters.system_node_count}" >> terraform.tfvars
  displayName: 'Generate terraform.tfvars file'

- script: |
    echo "Installing Terraform..."
    curl -o terraform.zip https://releases.hashicorp.com/terraform/${{ variables.terraformVersion }}/terraform_${{ variables.terraformVersion }}_linux_amd64.zip
    unzip terraform.zip
    sudo mv terraform /usr/local/bin/
    terraform version
  displayName: 'Install Terraform'

- script: |
    terraform init
    terraform plan -var-file=terraform.tfvars
  displayName: 'Terraform Init and Plan'

- script: |
    terraform apply -var-file=terraform.tfvars -auto-approve
  displayName: 'Terraform Apply'

- script: |
    terraform output -json > terraform-output.json
  displayName: 'Capture Terraform Outputs'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/terraform-output.json'
    artifactName: 'terraform-outputs'
  displayName: 'Publish Terraform Outputs'