# azure-pipelines.yml
trigger: none  # Disable automatic triggers for parameterized pipelines

pr: none  # Disable automatic PR triggers for parameterized pipelines

parameters:
  - name: resource_group_name
    type: string
    default: "aks_tf_rg1"
    displayName: "Resource Group Name"
    values:
    - "aks_tf_rg1"

  - name: location
    type: string
    default: "EastUS"
    displayName: "Location"
    values:
    - "EastUS"
    - "WestUS"
    - "CentralUS"

  - name: cluster_name
    type: string
    default: "my-aks-cluster-new"
    displayName: "Cluster Name"

  - name: kubernetes_version
    type: string
    default: "1.27.7"
    displayName: "Kubernetes Version"

  - name: system_node_count
    type: number
    default: 2
    displayName: "System Node Count"

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.3.0'  # specify the Terraform version you are using

steps:
- task: UseTerraform@0
  inputs:
    command: 'version'
    terraformVersion: $(terraformVersion)
  displayName: 'Install Terraform'

- script: |
    echo "resource_group_name = \"$(resource_group_name)\"" > terraform.tfvars
    echo "location = \"$(location)\"" >> terraform.tfvars
    echo "cluster_name = \"$(cluster_name)\"" >> terraform.tfvars
    echo "kubernetes_version = \"$(kubernetes_version)\"" >> terraform.tfvars
    echo "system_node_count = $(system_node_count)" >> terraform.tfvars
  displayName: 'Generate terraform.tfvars file'

- task: AzureCLI@2
  inputs:
    azureSubscription: '<Your Azure Service Connection Name>'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Install Terraform
      curl -o terraform.zip https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
      unzip terraform.zip
      sudo mv terraform /usr/local/bin/

      # Initialize Terraform
      terraform init -input=false

      # Apply Terraform
      terraform apply -input=false -auto-approve -var-file=terraform.tfvars
  displayName: 'Run Terraform'

- script: |
    terraform output -json > terraform-output.json
  displayName: 'Output Terraform Results'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/terraform-output.json'
    artifactName: 'terraform-outputs'
    publishLocation: 'pipeline'
  displayName: 'Publish Terraform Outputs'
